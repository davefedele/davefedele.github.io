<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Memoize - Thoughts of A Software Engineer</title><description>A place to keep the answers for things I shouldn't forget.</description><link>http://localhost:2368/</link><generator>Ghost 0.5</generator><lastBuildDate>Sun, 28 Dec 2014 22:04:07 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>Adding it all up</title><description>&lt;p&gt;There comes a time in every programmer's life when they need to increment a variable. How they do it can have a profound effect on how they expect the code following to behave.&lt;/p&gt;

&lt;h3 id="caseinpointvs"&gt;Case-in-point: ++  vs +=&lt;/h3&gt;

&lt;p&gt;Take a peak at the simple function below. I've created a variable count that is assigned a value of 0 . Then I've added 1 to count using &lt;strong&gt;count++&lt;/strong&gt; and next, &lt;strong&gt;count+=1&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var test = function(){
    var count = 0;
    console.log("starting value ", count);
    var countPlusPlus = count++;
    console.log("count++   ", countPlusPlus);
    var countPlusEqualsOne = count +=1;
    console.log("count +=1 ", countPlusEqualsOne);
};&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the output:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    =&gt; starting value  0
    =&gt; count++    0
    =&gt; count +=1  2&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The count++ variable is &lt;strong&gt;not&lt;/strong&gt; incremented instantaneously, as you might expect (or at least I did in the beginning). You can see the value logged to the terminal is 0 . You'll also notice that count+=1 logged 2 as it's value. That's because once count+=1 accessed the variable count, it had already been incremented to 1 from the count++ operation. &lt;/p&gt;

&lt;p&gt;This could definitely rain on your parade if you weren't expecting this. I ran into this problem when storing key:value pairs where I wanted the key to be incremented at the moment of storage:  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    var count = 0, storage = {};
    storage[count++] = "value";&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    =&amp;gt; storage = {0: "value"}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A better way would be to use &lt;strong&gt;count+=1&lt;/strong&gt; . This would increment my variable instantaneously and would simplify my code by not needing an additional line for variable incrementing.  &lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    var count = 0, storage = {};
    storage[count+=1] = "value";&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;    =&amp;gt; storage = {1: "value"}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Note - This also applies to &lt;strong&gt;--&lt;/strong&gt; and &lt;strong&gt;-=&lt;/strong&gt; operations. It just happens that people seem more excited to talk about addition instead of subtraction. Go figure!&lt;/em&gt;&lt;/p&gt;

&lt;h6 id="andtheyvariableincrementingprogrammerslivedhappilyeveryafter"&gt;And they variable incrementing programmers lived happily every after.&lt;/h6&gt;

&lt;h3 id="theend"&gt;The End&lt;/h3&gt;</description><link>http://localhost:2368/adding-it-all-up/</link><guid isPermaLink="false">b4b0bdf0-d3b6-410a-b2ed-a761180a424e</guid><dc:creator>Dave Fedele</dc:creator><pubDate>Sun, 28 Dec 2014 21:28:36 GMT</pubDate></item></channel></rss>